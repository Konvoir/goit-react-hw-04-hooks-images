{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","App.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","servises/APIpixabay.js","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","query","setQuery","className","s","SearchForm","e","preventDefault","trim","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","name","autoComplete","autoFocus","placeholder","value","onChange","target","ImageGalleryItem","id","webformatURL","largeImageURL","tags","onClick","src","alt","ImageGalleryItemImage","ImageGallery","images","map","axios","defaults","baseURL","APIpixabay","searchQuery","currentPage","get","then","response","data","hits","Button","modalRoot","document","querySelector","Modal","toggleModal","tag","useEffect","hendleKeydown","code","window","addEventListener","removeEventListener","createPortal","Overlay","currentTarget","App","setImages","setCurrentPage","setSearchQuery","isLoaded","setIsLoaded","error","setError","showModal","setShowModal","setLargeImageURL","fetchImages","a","request","length","prevImages","shouldRenderMoreButton","container","message","color","height","width","prevPage","onClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2ba0a5b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__ckIn4\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3YOcU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__29omW\",\"Modal\":\"Modal_Modal__3hTk-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1rIZo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2ja_f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2P3Rx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2pgaq\",\"SearchForm\":\"Searchbar_SearchForm__2twN9\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2mBAt\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__18hQM\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1Uig4\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from \"./Searchbar.module.css\"\r\n\r\nexport const Searchbar = ({onSubmit}) => {\r\n    const [query, setQuery] = useState(\"\");\r\n\r\n    const  handleInputChange = e => { setQuery(e.target.value) }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (query.trim() === \"\") { return; }\r\n        onSubmit(query);\r\n        setQuery(\"\")\r\n    }\r\n    \r\n return (\r\n            <header className={s.Searchbar}>\r\n                <form className={s.SearchForm}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    \r\n                    <button type=\"submit\" className={s.SearchFormButton}>\r\n                        <span className={s.SearchFormButtonLabel}>Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className={s.SearchFormInput}\r\n                        type=\"text\"\r\n                        name=\"query\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        value={query}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n\r\n        );\r\n\r\n\r\n    }\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import s from \"./Searchbar.module.css\"\r\n\r\n// export class Searchbar extends Component {\r\n//     state = {\r\n//         query: \"\",\r\n//     }\r\n\r\n//     handleInputChange = e => {\r\n//         this.setState({ query: e.target.value })\r\n//     }\r\n\r\n//     handleSubmit = e => {\r\n//         e.preventDefault()\r\n//         if (this.state.query.trim() === \"\") { return; }\r\n//         this.props.onSubmit(this.state.query)\r\n//         this.setState({query: \"\"})\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <header className={s.Searchbar}>\r\n//                 <form className={s.SearchForm}\r\n//                     onSubmit={this.handleSubmit}\r\n//                 >\r\n                    \r\n//                     <button type=\"submit\" className={s.SearchFormButton}>\r\n//                         <span className={s.SearchFormButtonLabel}>Search</span>\r\n//                     </button>\r\n\r\n//                     <input\r\n//                         className={s.SearchFormInput}\r\n//                         type=\"text\"\r\n//                         name=\"query\"\r\n//                         autoComplete=\"off\"\r\n//                         autoFocus\r\n//                         placeholder=\"Search images and photos\"\r\n//                         value={this.state.query}\r\n//                         onChange={this.handleInputChange}\r\n//                     />\r\n//                 </form>\r\n//             </header>\r\n\r\n//         );  \r\n//     }\r\n// };\r\n\r\n","import PropTypes from 'prop-types';\r\nimport s from \"./ImageGalleryItem.module.css\"\r\n\r\nexport const ImageGalleryItem = ({\r\n    id,\r\n    webformatURL,\r\n    largeImageURL,\r\n    tags,\r\n    onClick\r\n}) => (\r\n    <li key={tags} className={s.ImageGalleryItem}>\r\n        <img\r\n            src={webformatURL}\r\n            alt={tags}\r\n            className={s.ImageGalleryItemImage}\r\n            onClick={ () => onClick(largeImageURL)}/>\r\n            </li>\r\n        );\r\n\r\n\r\nImageGalleryItem.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    webformatURL: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string.isRequired,\r\n};","\r\nimport {ImageGalleryItem} from \"../ImageGalleryItem/ImageGalleryItem\"\r\nimport PropTypes from 'prop-types';\r\nimport s from \"./ImageGallery.module.css\"\r\n\r\n\r\nexport const ImageGallery = ({ images, onClick }) => (\r\n   <ul className={s.ImageGallery} >\r\n  {/* <!-- Набор <li> с изображениями --> */}\r\n        {images.map(\r\n            ({ id, webformatURL, largeImageURL, tags, }) => (\r\n                <ImageGalleryItem\r\n                    key={id}\r\n                    id={id}\r\n                    onClick={onClick}\r\n                    webformatURL={webformatURL}\r\n                    largeImageURL={largeImageURL}\r\n                    tags={tags}\r\n                />\r\n                \r\n            )\r\n        )}        \r\n    </ul>\r\n);\r\n \r\nImageGallery.propTypes = {\r\n    images: PropTypes.array.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n};","import axios from \"axios\";\naxios.defaults.baseURL = \"https://pixabay.com/api/\";\nconst apiKey = \"22709546-f5c1ca5c0881bb53c54fd0f13\";\n\nexport const APIpixabay = ({ searchQuery = \"\", currentPage = 1 }) => {\n  return axios\n    .get(\n      `?key=${apiKey}&q=${searchQuery}&page=${currentPage}&image_type=photo&orientation=horizontal&per_page=12`\n    )\n    .then((response) => response.data.hits);\n};\n","import s from \"./Button.module.css\"\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Button = ({ onClick }) => (\r\n    <button className={s.Button} type=\"button\" onClick={onClick}>\r\n        Load more\r\n    </button>\r\n);\r\n    \r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\nimport s from \"./Modal.module.css\"\r\n\r\nconst modalRoot = document.querySelector(\"#modalRoot\")\r\n\r\nexport const Modal = ({ toggleModal, largeImageURL, tag }) => {\r\n\r\n    useEffect(() => {\r\n        const hendleKeydown = (e) => {\r\n            if (e.code === \"Escape\") { toggleModal() }\r\n        };\r\n        window.addEventListener(\"keydown\", hendleKeydown);\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", hendleKeydown)\r\n        }\r\n    }, [toggleModal]);\r\n       \r\n    const hendleBackdropClick = (e) => {\r\n        if (e.target === e.currentTarget) { toggleModal() }\r\n    };\r\n    return createPortal(\r\n        <div className={s.Overlay}\r\n            onClick={hendleBackdropClick}\r\n        >\r\n            <div className={s.Modal}>{<img src={largeImageURL} alt={tag} />}</div>\r\n        </div>,\r\n        modalRoot,\r\n    );\r\n};\r\n\r\nModal.propTypes = {\r\n    toggleModal: PropTypes.func.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import { createPortal } from 'react-dom';\r\n// import s from \"./Modal.module.css\"\r\n\r\n// const modalRoot = document.querySelector(\"#modalRoot\")\r\n\r\n// export class Modal extends Component {\r\n\r\n//     componentDidMount() {\r\n//         window.addEventListener(\"keydown\", this.hendleKeydown)\r\n//     }\r\n\r\n//     componentWillUnmount() {\r\n//         window.removeEventListener(\"keydown\", this.hendleKeydown)\r\n//     }\r\n\r\n//     hendleKeydown = (e) => {\r\n//         if (e.code === \"Escape\") {\r\n//             this.props.onClose()\r\n//         }\r\n//     }\r\n\r\n//     hendleBackdropClick = (e) => {\r\n//         if (e.target === e.currentTarget) {\r\n//             this.props.onClose()\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n//         return createPortal(\r\n//             <div className={s.Overlay}\r\n//                 onClick={this.hendleBackdropClick}\r\n//             >\r\n//                 <div className={s.Modal}>{ this.props.children}</div>\r\n//             </div>,\r\n//             modalRoot\r\n//         );\r\n//     }\r\n// };\r\n\r\n","import { useState, useEffect} from \"react\";\nimport { Searchbar } from \"./components/Searchbar/Searchbar\";\nimport { ImageGallery } from \"./components/ImageGallery/ImageGallery\";\nimport { APIpixabay } from \"./servises/APIpixabay\";\nimport Loader from \"react-loader-spinner\";\nimport { Button } from \"./components/Button/Button\";\nimport { Modal } from \"./components/Modal/Modal\";\n\nimport s from \"./App.module.css\";\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [largeImageURL, setLargeImageURL] = useState(\"\");\n  const [tag, setTag] = useState(\"\");\n\n  useEffect(() => {\n    if (!searchQuery) return ;\n    const fetchImages = async () => {\n      try {\n        const request = await APIpixabay(searchQuery, currentPage)\n        setIsLoaded(true)\n        if (images.length > 0) {\n          setImages(prevImages => [...prevImages, ...request]);\n          setError(false)\n       }}\n      catch (error) {\n        setError(true)\n       }\n      finally { setIsLoaded(false) };\n    };\n\n    fetchImages();\n  }, [searchQuery, currentPage, images.length]);\n    \n    // if (images.length > 12) {\n    //   window.scrollTo({\n    //     top: document.documentElement.scrollHeight,\n    //     behavior: \"smooth\",\n    //   });\n    // }\n \n\n    const onChangeQuery = (query) => {\n      setImages([]);\n      setSearchQuery(query);\n      setCurrentPage(1);\n      setError(null)\n    };\n  \n  const toggleModal = () => setShowModal(!showModal);\n  \n  const onImageClick = () => {\n    setLargeImageURL(largeImageURL);\n    toggleModal();\n     };\n\n  const onButtonClick = () => {\n      setCurrentPage(prevPage => prevPage + 1);\n      // fetchImages();   scrollPage();\n    };\n\n  const shouldRenderMoreButton = images.length > 0 && !isLoaded;\n\n    return (\n      <div className={s.container}>\n        <Searchbar onSubmit={onChangeQuery}></Searchbar>\n\n        {error && (\n          <h2>\n            Sorry something went wrong, try again later!(\n            {error.message})\n          </h2>\n        )}\n\n        <ImageGallery\n          images={images}\n          onClick={onImageClick}\n        ></ImageGallery>\n\n        {isLoaded && (\n          <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\n        )}\n\n        {shouldRenderMoreButton && <Button onClick={onButtonClick} />}\n\n        {showModal && (\n          <Modal onClose={toggleModal}\n           largeImageURL={largeImageURL} tag={tag}> \n          </Modal>\n        )}\n      </div>\n    );\n  }\n\nexport default App;\n\n// import React, { Component } from \"react\";\n// import { Searchbar } from \"./components/Searchbar/Searchbar\";\n// import { ImageGallery } from \"./components/ImageGallery/ImageGallery\";\n// import { APIpixabay } from \"./servises/APIpixabay\";\n// import Loader from \"react-loader-spinner\";\n// import { Button } from \"./components/Button/Button\";\n// import { Modal } from \"./components/Modal/Modal\";\n\n// import s from \"./App.module.css\";\n\n// class App extends Component {\n//   state = {\n//     images: [],\n//     currentPage: 1,\n//     searchQuery: \"\",\n//     isLoaded: false,\n//     error: null,\n//     showModal: false,\n//     largeImageURL: \"\",\n//     tag: \"\",\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const { searchQuery, images, currentPage } = this.state;\n\n//     if (\n//       prevState.searchQuery !== searchQuery ||\n//       prevState.currentPage !== currentPage\n//     ) {\n//       this.fetchImages();\n//     }\n\n//     if (images.length > 12) {\n//       window.scrollTo({\n//         top: document.documentElement.scrollHeight,\n//         behavior: \"smooth\",\n//       });\n//     }\n//   }\n\n//   onChangeQuery = (query) => {\n//     this.setState({\n//       images: [],\n//       searchQuery: query,\n//       currentPage: 1,\n//       error: null,\n//     });\n//   };\n\n//   fetchImages = () => {\n//     const { currentPage, searchQuery } = this.state;\n//     const options = { currentPage, searchQuery };\n\n//     this.setState({ isLoaded: true });\n\n//     APIpixabay(options)\n//       .then((images) => {\n//         if (images.length > 0) {\n//           this.setState((prevState) => ({\n//             images: [...prevState.images, ...images],\n\n//             error: false,\n//           }));\n//         } else {\n//           this.setState({ error: true });\n//         }\n//       })\n//       .catch(() => this.setState({ error: true }))\n//       .finally(() => this.setState({ isLoaded: false }));\n//   };\n\n//   toggleModal = () => {\n//     this.setState(({ showModal }) => ({\n//       showModal: !showModal,\n//     }));\n//   };\n\n//   onImageClick = (largeImageURL) => {\n//     this.setState({\n//       largeImageURL: largeImageURL,\n//     });\n//     this.toggleModal();\n//   };\n\n//   onButtonClick = () => {\n//     this.setState(({ currentPage }) => ({ currentPage: currentPage + 1 }));\n//     this.fetchImages();\n//   };\n\n//   render() {\n//     const { isLoaded, images, error, showModal, largeImageURL, tag } =\n//       this.state;\n\n//     const shouldRenderMoreButton = images.length > 0 && !isLoaded;\n\n//     return (\n//       <div className={s.container}>\n//         <Searchbar onSubmit={this.onChangeQuery}></Searchbar>\n\n//         {error && (\n//           <h2>\n//             Sorry something went wrong, try again later!(\n//             {error.message})\n//           </h2>\n//         )}\n\n//         <ImageGallery\n//           images={images}\n//           onClick={this.onImageClick}\n//         ></ImageGallery>\n\n//         {isLoaded && (\n//           <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\n//         )}\n\n//         {shouldRenderMoreButton && <Button onClick={this.onButtonClick} />}\n\n//         {showModal && (\n//           <Modal onClose={this.toggleModal}\n//            largeImageURL={largeImageURL} tag={tag}> \n//           </Modal>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\n// App.propTypes = {};\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}