{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","App.module.css","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","servises/APIpixabay.js","components/Button/Button.jsx","components/Modal/Modal.jsx","components/ImageGallery/ImageGallery.jsx","App.jsx","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","props","useState","query","setQuery","className","s","SearchForm","onSubmit","e","preventDefault","trim","toast","error","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","name","autoComplete","autoFocus","placeholder","value","onChange","target","ImageGalleryItem","imageQuery","openModal","map","id","webformatURL","largeImageURL","tags","onClick","src","alt","ImageGalleryItemImage","APIpixabay","getData","searchQuery","currentPage","BASE_URL","API_KEY","url","fetch","then","response","ok","json","Promise","reject","Error","Button","modalRoot","document","querySelector","Modal","useEffect","window","addEventListener","handleKeydown","removeEventListener","code","closeModal","createPortal","Overlay","currentTarget","ImageGallery","images","setImages","setLargeImageURL","showModal","setShowModal","isLoaded","setIsLoaded","fetchImages","setTimeout","page","data","hits","prevState","scrollTo","top","documentElement","scrollHeight","behavior","finally","setPage","largeImage","length","App","stateSearchQuery","setStateSearchQuery","statePage","setStatePage","container","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5be2e5eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__ckIn4\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3YOcU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__29omW\",\"Modal\":\"Modal_Modal__3hTk-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1rIZo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2ja_f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2P3Rx\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport s from \"./Searchbar.module.css\"\r\n\r\nexport const Searchbar = (props) => {\r\n    const [query, setQuery] = useState(\"\");\r\n\r\n    const  handleInputChange = e => { setQuery(e.target.value) }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (query.trim() === \"\") {\r\n            toast.error('Enter the name of your picture theme');\r\n            return;\r\n        }\r\n        props.onSubmit(query, 1);\r\n        setQuery(\"\");\r\n    };\r\n    \r\n return (\r\n            <header className={s.Searchbar}>\r\n                <form className={s.SearchForm}\r\n                    onSubmit={handleSubmit} >\r\n                    \r\n                    <button type=\"submit\" className={s.SearchFormButton}>\r\n                        <span className={s.SearchFormButtonLabel}>Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className={s.SearchFormInput}\r\n                        type=\"text\"\r\n                        name=\"query\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        value={query}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n\r\n        );\r\n\r\n\r\n    }\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import s from \"./Searchbar.module.css\"\r\n\r\n// export class Searchbar extends Component {\r\n//     state = {\r\n//         query: \"\",\r\n//     }\r\n\r\n//     handleInputChange = e => {\r\n//         this.setState({ query: e.target.value })\r\n//     }\r\n\r\n//     handleSubmit = e => {\r\n//         e.preventDefault()\r\n//         if (this.state.query.trim() === \"\") { return; }\r\n//         this.props.onSubmit(this.state.query)\r\n//         this.setState({query: \"\"})\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <header className={s.Searchbar}>\r\n//                 <form className={s.SearchForm}\r\n//                     onSubmit={this.handleSubmit}\r\n//                 >\r\n                    \r\n//                     <button type=\"submit\" className={s.SearchFormButton}>\r\n//                         <span className={s.SearchFormButtonLabel}>Search</span>\r\n//                     </button>\r\n\r\n//                     <input\r\n//                         className={s.SearchFormInput}\r\n//                         type=\"text\"\r\n//                         name=\"query\"\r\n//                         autoComplete=\"off\"\r\n//                         autoFocus\r\n//                         placeholder=\"Search images and photos\"\r\n//                         value={this.state.query}\r\n//                         onChange={this.handleInputChange}\r\n//                     />\r\n//                 </form>\r\n//             </header>\r\n\r\n//         );  \r\n//     }\r\n// };\r\n\r\n","import s from \"./ImageGalleryItem.module.css\"\r\n\r\nexport const ImageGalleryItem = ({ imageQuery, openModal }) => {\r\n    return (\r\n        <>\r\n     \r\n            {imageQuery.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n                <li key={id} className={s.ImageGalleryItem}\r\n                onClick={() => openModal(largeImageURL)}>\r\n         <img \r\n            src={webformatURL}\r\n            alt={tags}\r\n            className={s.ImageGalleryItemImage}\r\n                    />\r\n             </li>        \r\n            ) )}\r\n        </>\r\n    )\r\n}","function getData(searchQuery = \"\", currentPage = 1) {\n  const BASE_URL = \"https://pixabay.com/api/\";\n  const API_KEY = \"22709546-f5c1ca5c0881bb53c54fd0f13\";\n  const url = `${BASE_URL}?q=${searchQuery}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  return fetch(url).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(\n      new Error(`Нет изображений по вашему запросу ${searchQuery}`)\n    );\n  });\n}\n\nexport const APIpixabay = { getData };\n","import s from \"./Button.module.css\"\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Button = ({ onClick }) => {\r\n    return (\r\n    <button className={s.Button} type=\"button\" onClick={onClick}>\r\n        Load more\r\n    </button>\r\n    );\r\n }   \r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\nimport s from \"./Modal.module.css\"\r\n\r\nconst modalRoot = document.querySelector(\"#modalRoot\")\r\n\r\nexport const Modal = (props) => {\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"keydown\", handleKeydown);\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", handleKeydown)\r\n        }\r\n    })\r\n\r\n    const handleKeydown = (e) => {\r\n        if (e.code === \"Escape\") { props.closeModal() }\r\n    };\r\n\r\nconst hendleBackdropClick = (e) => {\r\n        if (e.target === e.currentTarget) { props.closeModal() }\r\n    };\r\n\r\n    return createPortal(\r\n        <div className={s.Overlay}\r\n            onClick={hendleBackdropClick}\r\n        >\r\n            <div className={s.Modal}>{<img src={props.largeImageURL} alt=\"\" />}</div>\r\n        </div>,\r\n        modalRoot,\r\n    );\r\n};\r\n\r\nModal.propTypes = {\r\n    toggleModal: PropTypes.func.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import { createPortal } from 'react-dom';\r\n// import s from \"./Modal.module.css\"\r\n\r\n// const modalRoot = document.querySelector(\"#modalRoot\")\r\n\r\n// export class Modal extends Component {\r\n\r\n//     componentDidMount() {\r\n//         window.addEventListener(\"keydown\", this.hendleKeydown)\r\n//     }\r\n\r\n//     componentWillUnmount() {\r\n//         window.removeEventListener(\"keydown\", this.hendleKeydown)\r\n//     }\r\n\r\n//     hendleKeydown = (e) => {\r\n//         if (e.code === \"Escape\") {\r\n//             this.props.onClose()\r\n//         }\r\n//     }\r\n\r\n//     hendleBackdropClick = (e) => {\r\n//         if (e.target === e.currentTarget) {\r\n//             this.props.onClose()\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n//         return createPortal(\r\n//             <div className={s.Overlay}\r\n//                 onClick={this.hendleBackdropClick}\r\n//             >\r\n//                 <div className={s.Modal}>{ this.props.children}</div>\r\n//             </div>,\r\n//             modalRoot\r\n//         );\r\n//     }\r\n// };\r\n\r\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport {ImageGalleryItem} from \"../ImageGalleryItem/ImageGalleryItem\"\r\n// import PropTypes from 'prop-types';\r\nimport s from \"./ImageGallery.module.css\"\r\n\r\nimport { APIpixabay } from \"../../servises/APIpixabay\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Button } from \"../Button/Button\";\r\nimport { Modal } from \"../Modal/Modal\";\r\n\r\n\r\n\r\n\r\nexport const ImageGallery = (props) => {\r\n\r\n    const [images, setImages] = useState([]);\r\n    const [largeImageURL, setLargeImageURL] = useState(\"\");\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        if (props.searchQuery) {\r\n            setImages([]);\r\n            fetchImages();\r\n        }\r\n    }, [props.searchQuery]);\r\n\r\n    function fetchImages() {\r\n        setIsLoaded(true);\r\n\r\n        setTimeout(() => {\r\n            APIpixabay\r\n                .getData(props.searchQuery, props.page)\r\n                .then(data => {\r\n                    if (props.page === 1) {\r\n                        setImages(data.hits);\r\n                    } else {\r\n                        setImages(prevState => [...prevState, ...data.hits]);\r\n                        window.scrollTo({\r\n                            top: document.documentElement.scrollHeight,\r\n                            behavior: 'smooth',\r\n                        });\r\n                    }\r\n                })\r\n                .finally(() => {\r\n                    setIsLoaded(false);\r\n                    props.setPage(prevState => prevState + 1);\r\n                });\r\n        }, 200);\r\n    }\r\n        const openModal = largeImage => {\r\n            setShowModal(true);\r\n            setLargeImageURL(largeImage);\r\n        };\r\n\r\n        const closeModal = () => {\r\n            setShowModal(false);\r\n            setLargeImageURL('');\r\n        };\r\n\r\n        return (\r\n            <Fragment>\r\n                <ul className={s.ImageGallery} >\r\n                    {/* <!-- Набор <li> с изображениями --> */}\r\n       \r\n                    <ImageGalleryItem imageQuery={images} openModal={openModal} />\r\n                </ul>\r\n                {images.length === 0 && (\r\n                    <p>{`No images for your request \"${props.searchQuery}\"`}</p>\r\n                )}\r\n                {showModal && (\r\n                    <Modal closeModal={closeModal} largeImageURL={largeImageURL} />\r\n                )}\r\n                {isLoaded && <Loader />}\r\n                {images.length > 0 && <Button onClick={fetchImages} />}\r\n        \r\n            </Fragment>\r\n        )\r\n    \r\n}\r\n\r\n\r\n    \r\n \r\n \r\n// ImageGallery.propTypes = {\r\n//     images: PropTypes.array.isRequired,\r\n//     onClick: PropTypes.func.isRequired,\r\n// };","import { useState} from \"react\";\nimport { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Searchbar } from \"./components/Searchbar/Searchbar\";\nimport { ImageGallery } from \"./components/ImageGallery/ImageGallery\";\n\nimport s from \"./App.module.css\";\n\nexport default function App() {\n  const [stateSearchQuery, setStateSearchQuery] = useState(\"\");\n  const [statePage, setStatePage] = useState(1);\n\n  const onChangeQuery = (searchQuery, page) => {\n    setStateSearchQuery(searchQuery);\n    setStatePage(page)\n  };\n     return (\n      <div className={s.container}>\n        <Searchbar onSubmit={onChangeQuery}></Searchbar>\n         <ToastContainer autoClose={3000} />\n        <ImageGallery\n          searchQuery={stateSearchQuery}\n          page={statePage}\n          setPage={setStatePage}\n        ></ImageGallery>\n\n      </div>\n    );\n  }\n\n// App.propTypes = {};\n\n\n // const [images, setImages] = useState([]);\n  // const [isLoaded, setIsLoaded] = useState(false);\n  // const [error, setError] = useState(null);\n  // const [showModal, setShowModal] = useState(false);\n  // const [largeImageURL, setLargeImageURL] = useState(\"\");\n  // const [tag, setTag] = useState(\"\");\n\n\n\n// import React, { Component } from \"react\";\n// import { Searchbar } from \"./components/Searchbar/Searchbar\";\n// import { ImageGallery } from \"./components/ImageGallery/ImageGallery\";\n// import { APIpixabay } from \"./servises/APIpixabay\";\n// import Loader from \"react-loader-spinner\";\n// import { Button } from \"./components/Button/Button\";\n// import { Modal } from \"./components/Modal/Modal\";\n\n// import s from \"./App.module.css\";\n\n// class App extends Component {\n//   state = {\n//     images: [],\n//     currentPage: 1,\n//     searchQuery: \"\",\n//     isLoaded: false,\n//     error: null,\n//     showModal: false,\n//     largeImageURL: \"\",\n//     tag: \"\",\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const { searchQuery, images, currentPage } = this.state;\n\n//     if (\n//       prevState.searchQuery !== searchQuery ||\n//       prevState.currentPage !== currentPage\n//     ) {\n//       this.fetchImages();\n//     }\n\n//     if (images.length > 12) {\n//       window.scrollTo({\n//         top: document.documentElement.scrollHeight,\n//         behavior: \"smooth\",\n//       });\n//     }\n//   }\n\n//   onChangeQuery = (query) => {\n//     this.setState({\n//       images: [],\n//       searchQuery: query,\n//       currentPage: 1,\n//       error: null,\n//     });\n//   };\n\n//   fetchImages = () => {\n//     const { currentPage, searchQuery } = this.state;\n//     const options = { currentPage, searchQuery };\n\n//     this.setState({ isLoaded: true });\n\n//     APIpixabay(options)\n//       .then((images) => {\n//         if (images.length > 0) {\n//           this.setState((prevState) => ({\n//             images: [...prevState.images, ...images],\n\n//             error: false,\n//           }));\n//         } else {\n//           this.setState({ error: true });\n//         }\n//       })\n//       .catch(() => this.setState({ error: true }))\n//       .finally(() => this.setState({ isLoaded: false }));\n//   };\n\n//   toggleModal = () => {\n//     this.setState(({ showModal }) => ({\n//       showModal: !showModal,\n//     }));\n//   };\n\n//   onImageClick = (largeImageURL) => {\n//     this.setState({\n//       largeImageURL: largeImageURL,\n//     });\n//     this.toggleModal();\n//   };\n\n//   onButtonClick = () => {\n//     this.setState(({ currentPage }) => ({ currentPage: currentPage + 1 }));\n//     this.fetchImages();\n//   };\n\n//   render() {\n//     const { isLoaded, images, error, showModal, largeImageURL, tag } =\n//       this.state;\n\n//     const shouldRenderMoreButton = images.length > 0 && !isLoaded;\n\n//     return (\n//       <div className={s.container}>\n//         <Searchbar onSubmit={this.onChangeQuery}></Searchbar>\n\n//         {error && (\n//           <h2>\n//             Sorry something went wrong, try again later!(\n//             {error.message})\n//           </h2>\n//         )}\n\n//         <ImageGallery\n//           images={images}\n//           onClick={this.onImageClick}\n//         ></ImageGallery>\n\n//         {isLoaded && (\n//           <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\n//         )}\n\n//         {shouldRenderMoreButton && <Button onClick={this.onButtonClick} />}\n\n//         {showModal && (\n//           <Modal onClose={this.toggleModal}\n//            largeImageURL={largeImageURL} tag={tag}>\n//           </Modal>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\n// App.propTypes = {};\n\n// export default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2pgaq\",\"SearchForm\":\"Searchbar_SearchForm__2twN9\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2mBAt\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__18hQM\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1Uig4\"};"],"sourceRoot":""}